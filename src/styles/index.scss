@mixin absolute-center {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
}

@mixin list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin size($value...) {
  $width: nth($value, 1);
  $height: $width;

  @if length($value) > 1 {
    $height: nth($value, 2);
  }

  height: $height;
  width: $width;
}

@mixin generated-block($placement: after, $display: inline-block) {
  &::#{$placement} {
    content: '';
    display: $display;

    @content;
  }
}

@mixin min-width($breakpoint) {
  @media (min-width: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint), $breakpoint)) {
    @content;
  }
}

@mixin min-size($breakpoint) {
  @media (min-width: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint), $breakpoint)) and (min-height: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint), $breakpoint)) {
    @content;
  }
}

@mixin max-width($breakpoint) {
  @media (max-width: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint) - 1, $breakpoint)) {
    @content;
  }
}

@mixin max-size($breakpoint) {
  @media (max-width: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint) - 1, $breakpoint)), (max-height: if(map-get($breakpoints, $breakpoint), map-get($breakpoints, $breakpoint) - 1, $breakpoint)) {
    @content;
  }
}

$font-stack-system: (
  system-ui,
  -apple-system,
  BlinkMacSystemFont,
  'Segoe UI',
  'Roboto',
  'Droid Sans',
  'Helvetica Neue',
);

$blue: #008cd2;
$light-blue: #00aee4;
$red: #c20839;
$light-red: #eb1755;
$green: #00a532;
$light-green: #00c789;
$purple: #935782;
$light-purple: #b18fac;
$orange: #dd731d;
$light-orange: #fd8713;

$frame-padding: 5vmin;

@mixin hexagon-size {
  width: 6rem;
  height: 6.93rem;

  @include min-size(sm) {
    width: 12rem;
    height: 13.86rem;
  }
}

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

@font-face {
  font: {
    family: 'Montserrat';
    style: normal;
    weight: 400;
    display: fallback;
  }

  src: local('Montserrat Regular'),
    local('Montserrat-Regular'),
    url('../assets/fonts/montserrat.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
    url('../assets/fonts/montserrat.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

@font-face {
  font: {
    family: 'Galano Grotesque';
    style: normal;
    weight: 700;
    display: fallback;
  }

  src: local('Galano Grotesque Bold'),
    local('GalanoGrotesque-Bold'),
    url('../assets/fonts/galano-grotesque-700.woff2') format('woff2');
}

html { height: 100%; }

body {
  flex: 1;
  display: flex;
  margin: 0;
  min-height: 100%;
  color: white;
  font-family: Montserrat, $font-stack-system, sans-serif;
  line-height: 1.4;
}

.hexagon-shade {
  @include absolute-center();

  position: fixed;
  z-index: 1;
  background-color: white;
  pointer-events: none;

  .hexagon {
    @include absolute-center();
    @include hexagon-size();

    fill: white;

    &--color-1 { fill: $blue; }
    &--color-2 { fill: $light-blue; }
  }
}

.frame {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;

  @include generated-block(before) {
    flex: 1;
    padding-top: $frame-padding;
  }
}

.background {
  @include absolute-center;
  @include size(100%);

  z-index: -1;
  object: {
    fit: cover;
    position: 90% top;
  }
}

.header {
  display: flex;
  align-items: center;

  @include max-size(sm) {
    margin: {
      left: $frame-padding;
      right: $frame-padding;
      bottom: 1rem;
    }
  }

  @include min-size(sm) {
    flex-direction: row-reverse;

    @include generated-block(before) { flex: 1; }
  }

  &__logo { @include hexagon-size(); }

  &__text {
    flex: 1;
    margin: 0;
    font-size: 2.75rem;
    font-family: 'Galano Grotesque', Montserrat, $font-stack-system, sans-serif;
    line-height: 1;
    letter-spacing: -.02em;

    @include min-size(sm) {
      font-size: 3.75rem;
      text-align: right;
    }
  }

  &__text__inner {
    display: inline-block;
    position: relative;
    margin: 0 1rem;
    padding-right: .03em;

    @include min-size(sm) {
      margin-left: $frame-padding;
      margin-right: .33em;
    }
  }

  &__text__shadow {
    @include absolute-center();

    z-index: -1;
    color: transparent;
    text-shadow: 0 0 2em black;
  }
}

.main {
  flex: 1;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-end;
  padding-bottom: $frame-padding;
  min: {
    height: 18.85rem;
    height: fit-content;
  }

  @include max-width(sm) { background-image: linear-gradient(transparent, black); }
}

.icon-list {
  @include list-reset;

  &__item {
    flex-shrink: 0;
    display: flex;
    padding: 0 $frame-padding;
    max-width: 25rem;

    & ~ & { margin-top: 1rem; }

    .hexagon { @include size(100%); }
    &--red .hexagon { fill: $red; }
    &--green .hexagon { fill: $green; }
    &--purple .hexagon { fill: $purple; }
    &--orange .hexagon { fill: $orange; }
  }

  &__icon {
    @include size(3rem, 3.46rem);

    flex-shrink: 0;
    position: relative;
    margin-right: .75rem;

    svg {
      @include absolute-center();
      @include size(1.5rem);

      fill: currentColor;
    }
  }

  &__text {
    align-self: center;
    text-shadow: 0 0 2em black;
  }
}

.social-list {
  @include list-reset;

  display: flex;
  justify-content: flex-end;
  margin: {
    left: auto;
    bottom: -.5rem;
  }

  padding-right: calc(#{$frame-padding} - .5rem);

  &__link {
    display: block;
    padding: .5rem;
    color: inherit;

    &:hover,
    &:focus {
      color: $light-blue;
    }
  }

  svg {
    @include size(1.5rem);

    display: block;
    fill: currentColor;
  }
}
